# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  workflow_run:
    workflows: ["Build"]
    types: [requested]
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
jobs:
  valgrind:
    name: valgrind
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout release repository
      id: sr-checkout
      uses: actions/checkout@v2
    - name: Checkout release repository
      id: release-checkout
      uses: actions/checkout@v2
      with:
        repository: cs340-illinois/fa22_cs340_.release
        ref: mp1
        path: release
    - name: Copy local files from release
      id: local-copy
      uses: illinois/local-copy@v1
      with:
        src_path: release/mp1
        dst_path: mp1
        copy: '.github/classroom : .github/classroom, Makefile : Makefile, tests : tests'
    - name: Verify student submission
      id: verify-policy
      uses: illinois/verify-policy@v1
      with:
        reference_files: 'release/mp1/.github/classroom : mp1/.github/classroom, release/mp1/Makefile : mp1/Makefile, release/mp1/tests : mp1/tests'
    - name: Install valgrind
      run: sudo apt install -y valgrind
    - name: Autograding
      id: autograding
      uses: wadefagen/autograding@v2
      with:
        path: mp1/
        test_suite: valgrind
        step_summary: true
    - name: Generate workflow summary
      if: ${{ always() }}
      run: echo -e "$(sh ./.github/workflows/gen-status-report.sh)" >> $GITHUB_STEP_SUMMARY
      env:
        sr_checkout_status: ${{ steps.sr-checkout.outcome }}
        release_checkout_status: ${{ steps.release-checkout.outcome }}
        local_copy_status: ${{ steps.local-copy.outcome }}
        verify_policy_status: ${{ steps.verify-policy.outcome }}
        autograding_status: ${{ steps.autograding.outcome }}
        points: ${{ steps.autograding.outputs.Points }}
    needs:
    - autograding
  start:
    name: start
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout release repository
      id: sr-checkout
      uses: actions/checkout@v2
    - name: Checkout release repository
      id: release-checkout
      uses: actions/checkout@v2
      with:
        repository: cs340-illinois/fa22_cs340_.release
        ref: mp1
        path: release
    - name: Copy local files from release
      id: local-copy
      uses: illinois/local-copy@v1
      with:
        src_path: release/mp1
        dst_path: mp1
        copy: '.github/classroom : .github/classroom, Makefile : Makefile, tests : tests'
    - name: Verify student submission
      id: verify-policy
      uses: illinois/verify-policy@v1
      with:
        reference_files: 'release/mp1/.github/classroom : mp1/.github/classroom, release/mp1/Makefile : mp1/Makefile, release/mp1/tests : mp1/tests'
    - name: Autograding
      id: autograding
      uses: wadefagen/autograding@v2
      with:
        path: mp1/
        test_suite: start
        step_summary: true
    - name: Generate workflow summary
      if: ${{ always() }}
      run: echo -e "$(sh ./.github/workflows/gen-status-report.sh)" >> $GITHUB_STEP_SUMMARY
      env:
        sr_checkout_status: ${{ steps.sr-checkout.outcome }}
        release_checkout_status: ${{ steps.release-checkout.outcome }}
        local_copy_status: ${{ steps.local-copy.outcome }}
        verify_policy_status: ${{ steps.verify-policy.outcome }}
        autograding_status: ${{ steps.autograding.outcome }}
        points: ${{ steps.autograding.outputs.Points }}
  autograding:
    name: autograding
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout release repository
      id: sr-checkout
      uses: actions/checkout@v2
    - name: Checkout release repository
      id: release-checkout
      uses: actions/checkout@v2
      with:
        repository: cs340-illinois/fa22_cs340_.release
        ref: mp1
        path: release
    - name: Copy local files from release
      id: local-copy
      uses: illinois/local-copy@v1
      with:
        src_path: release/mp1
        dst_path: mp1
        copy: '.github/classroom : .github/classroom, Makefile : Makefile, tests : tests'
    - name: Verify student submission
      id: verify-policy
      uses: illinois/verify-policy@v1
      with:
        reference_files: 'release/mp1/.github/classroom : mp1/.github/classroom, release/mp1/Makefile : mp1/Makefile, release/mp1/tests : mp1/tests'
    - name: Autograding
      id: autograding
      uses: wadefagen/autograding@v2
      with:
        path: mp1/
        test_suite: autograding
        step_summary: true
    - name: Generate workflow summary
      if: ${{ always() }}
      run: echo -e "$(sh ./.github/workflows/gen-status-report.sh)" >> $GITHUB_STEP_SUMMARY
      env:
        sr_checkout_status: ${{ steps.sr-checkout.outcome }}
        release_checkout_status: ${{ steps.release-checkout.outcome }}
        local_copy_status: ${{ steps.local-copy.outcome }}
        verify_policy_status: ${{ steps.verify-policy.outcome }}
        autograding_status: ${{ steps.autograding.outcome }}
        points: ${{ steps.autograding.outputs.Points }}
